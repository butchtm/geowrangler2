# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/00_core.ipynb.

# %% auto 0
__all__ = ['foo', 'bar', 'Dummy']

# %% ../nbs/00_core.ipynb 11
import requests
import pandas as pd
import geopandas as gpd
import numpy as np
from fastcore.all import patch

# %% ../nbs/00_core.ipynb 12
def foo(
    bar:str='baz' # input string
) -> str: # return same input string or 'baz' by default
    """
    Function that returns the value of the input argument.

    Parameters:
    
    bar (str): Input string. Defaults to 'baz'.

    Returns:
    
    str: The input string.
    """
    return bar

# %% ../nbs/00_core.ipynb 19
def bar(
    foo:str='baz' # input string
) -> str: # return same input string or 'baz' by default
    """
    Function that returns the value of the input argument.

    Parameters:
    
    foo (str): Input string. Defaults to 'baz'.

    Returns:
    
    str: The input string.
    """
    return foo

# %% ../nbs/00_core.ipynb 23
class Dummy:
    """Dummy class example

       Dummy class example for documentation purposes. Goal is to showcase how to split class methods into their own sections

       Parameters:
       
       args(list): list of args
       
       kwargs(dict): dict of kwargs
    """
    def __init__(self, 
                 *args:[], # list of args 
                 **kwargs:dict, # dict of kwargs
                ):
        self.args = args
        self.kwargs = kwargs
        

# %% ../nbs/00_core.ipynb 24
@patch
def dummyfoo(self:Dummy, 
             bar:str='baz', # input string
            ) -> str: # return the input string
    """
    Method that returns the value of the input argument.

    Parameters:
    bar (str): Input string. Defaults to 'baz'.

    Returns:
    str: The input string.
    """
    return bar
